name: CD Dev-Lane
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch.

# Repository Secrets needed to execute this workflow
# ==================================================
# GH_TOKEN : https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
# KEYSTORE_JKS_BASE64 : A base64 String of .JKS keystore file. Can be generated by : openssl base64 -A -in android/key.jks
# KEY_PROPERTIES_BASE64 : A base64 String of key.properties file. Can be generated by : openssl base64 -A -in android/key.properties
# APP_PACKAGE_NAME : Package name of the app (com.example.some.app)
# PLAYSTORE_ACCOUNT_KEY:


on:
  push:
    branches:
      - release
jobs:
  build:
    name: Build Artifacts and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      
      - name: Read pubspec.yaml Version
        uses: KJ002/read-yaml@1.5
        id: pubspec-data
        with:
          file: 'pubspec.yaml'
          key-path: '["version"]'

      - name: Generate unique Release Tag
        run: echo RELEASE_TAG=Release-${{ steps.pubspec-data.outputs.data }}-$(date +%s) >> $GITHUB_ENV

      - name: Set flavor string
        run: echo APP_FLAVOR=prod >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "11.x"

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.7.0"
          channel: 'stable'
          
      - name: Decode android/key.properties
        run: echo "${{ secrets.KEY_PROPERTIES_BASE64 }}" | base64 --decode > android/key.properties

      - name: Decode android/neumodore_key.jks
        run: echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > android/key.jks
      
      - name: Pub Get Packages
        run: flutter pub get

      - name: Build APPBUNDLE
        run: flutter build appbundle --release --flavor ${{env.APP_FLAVOR}} -t lib/main_${{env.APP_FLAVOR}}.dart && flutter build apk --release --flavor ${{env.APP_FLAVOR}} -t lib/main_${{env.APP_FLAVOR}}.dart

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/${{env.APP_FLAVOR}}Release/*.aab,build/app/outputs/flutter-apk/app-${{env.APP_FLAVOR}}-release.apk"
          token: ${{ secrets.GH_TOKEN }}
          tag: "${{env.RELEASE_TAG}}"
          body: "${{ github.event.head_commit.message }}"

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: APPBUNDLE
          path: build/app/outputs/bundle/${{env.APP_FLAVOR}}Release/app-${{env.APP_FLAVOR}}-release.aab


      - name: Save APK to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: APK
          path: build/app/outputs/flutter-apk/app-${{env.APP_FLAVOR}}-release.apk

  release_internal:
    name: Release Artifacts to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get APPBUNDLE from Artifacts
        uses: actions/download-artifact@v2
        with:
          name: APPBUNDLE
      - name: Release APPBUNDLE to Production track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: ${{ secrets.APP_PACKAGE_NAME }}
          releaseFiles: app-${{env.APP_FLAVOR}}-release.aab
          track: production
          whatsNewDirectory: distribution/whatsnew
          status: inProgress
          inAppUpdatePriority: 2
          userFraction: 0.33
